  CREATE TABLE "FOOD_LIST" 
   (	"FOOD_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"FOOD_NAME" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"FOOD_PRICE" NUMBER, 
	"M_TYPE_ID" NUMBER, 
	"IMAGE" BLOB, 
	 CONSTRAINT "FOOD_LIST_PK" PRIMARY KEY ("FOOD_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "MENU_LIST" 
   (	"ORDER_NO" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"M_FOOD_ID" NUMBER, 
	"MENU_AMOUNT" NUMBER, 
	"RATE" NUMBER, 
	"TOTAL" NUMBER, 
	"M_PURCHASE_ORDER" NUMBER, 
	"COOK_STATUS" NUMBER, 
	 CONSTRAINT "MENU_LIST_PK" PRIMARY KEY ("ORDER_NO") DISABLE
   ) ;

  CREATE TABLE "M_MATERIAL" 
   (	"MATERIAL_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"MATERIAL_NAME" VARCHAR2(50 CHAR), 
	"MAX_STOCK" NUMBER, 
	"N_STOCK" NUMBER, 
	"M_UNIT_CODE" NUMBER, 
	 CONSTRAINT "M_MATERIAL_PK" PRIMARY KEY ("MATERIAL_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "ORDER_MENU" 
   (	"ORDER_MENU_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"M_PURCHASE_ORDER" NUMBER, 
	"M_ZONE_ID" NUMBER, 
	"M_TABLE_ID" NUMBER, 
	"M_FOOD_ID" NUMBER, 
	"M_MENU_AMOUNT" NUMBER, 
	 CONSTRAINT "ORDER_MENU_PK" PRIMARY KEY ("ORDER_MENU_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "PURCHASE_ORDER_MENU" 
   (	"PURCHASE_ORDER" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"M_QUEUE_NO" NUMBER, 
	"M_TABLE_NO" NUMBER, 
	"BILL_STATUS" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"REQUEST_CHECK_BILL" NUMBER, 
	 CONSTRAINT "PURCHASE_ORDER_MENU_PK" PRIMARY KEY ("PURCHASE_ORDER")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "Q_QUEUE" 
   (	"QUEUE_NO" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DATE_QUEUE" DATE, 
	"QUEUE_STATUS" VARCHAR2(50 CHAR), 
	"QUEUE_NUMBER" NUMBER, 
	 CONSTRAINT "Q_QUEUE_PK" PRIMARY KEY ("QUEUE_NO")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "T_TABLE" 
   (	"TABLE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"TABLE_NO" NUMBER, 
	"ZONE" NUMBER, 
	 CONSTRAINT "T_TABLE_PK" PRIMARY KEY ("TABLE_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "Z_ZONE" 
   (	"ZONE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME_ZONE" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "Z_ZONE" PRIMARY KEY ("ZONE_ID")
  USING INDEX  ENABLE
   ) ;

  ALTER TABLE "FOOD_LIST" ADD CONSTRAINT "M_MENU_TYPE_ID-FK" FOREIGN KEY ("M_TYPE_ID")
	  REFERENCES "MENU_TYPE" ("MENU_TYPE_ID") ENABLE;

  ALTER TABLE "MENU_LIST" ADD CONSTRAINT "M_FOOD_ID1-FK" FOREIGN KEY ("M_FOOD_ID")
	  REFERENCES "FOOD_LIST" ("FOOD_ID") ENABLE;
  ALTER TABLE "MENU_LIST" ADD CONSTRAINT "PURCHASE_ORDER_FK" FOREIGN KEY ("M_PURCHASE_ORDER")
	  REFERENCES "PURCHASE_ORDER_MENU" ("PURCHASE_ORDER") ENABLE;

  ALTER TABLE "M_MATERIAL" ADD CONSTRAINT "M_UNIT_CODE-FK" FOREIGN KEY ("M_UNIT_CODE")
	  REFERENCES "M_UNIT_MATERIAL" ("UNIT_CODE") ENABLE;

  ALTER TABLE "ORDER_MENU" ADD CONSTRAINT "FOOD_FK" FOREIGN KEY ("M_FOOD_ID")
	  REFERENCES "FOOD_LIST" ("FOOD_ID") ENABLE;
  ALTER TABLE "ORDER_MENU" ADD CONSTRAINT "M_PURCHASE_ORDER_FK" FOREIGN KEY ("M_PURCHASE_ORDER")
	  REFERENCES "PURCHASE_ORDER_MENU" ("PURCHASE_ORDER") ENABLE;
  ALTER TABLE "ORDER_MENU" ADD CONSTRAINT "TABLE_FK" FOREIGN KEY ("M_TABLE_ID")
	  REFERENCES "T_TABLE" ("TABLE_ID") ENABLE;
  ALTER TABLE "ORDER_MENU" ADD CONSTRAINT "ZONE_FK" FOREIGN KEY ("M_ZONE_ID")
	  REFERENCES "Z_ZONE" ("ZONE_ID") ENABLE;

  ALTER TABLE "PURCHASE_ORDER_MENU" ADD CONSTRAINT "FK_QUEUE_NO" FOREIGN KEY ("M_QUEUE_NO")
	  REFERENCES "Q_QUEUE" ("QUEUE_NO") ENABLE;
  ALTER TABLE "PURCHASE_ORDER_MENU" ADD CONSTRAINT "TABLE_NO-FK" FOREIGN KEY ("M_TABLE_NO")
	  REFERENCES "T_TABLE" ("TABLE_ID") ENABLE;

  CREATE OR REPLACE EDITIONABLE TRIGGER "PURCHASE_ORDER_MENU_T" 
after
insert or update or delete on "PURCHASE_ORDER_MENU"
for each row
begin
    update q_queue set QUEUE_STATUS='1' 
    where QUEUE_NO=:NEW.M_QUEUE_NO;
end;
/
ALTER TRIGGER "PURCHASE_ORDER_MENU_T" ENABLE;

  ALTER TABLE "T_TABLE" ADD CONSTRAINT "ZONE-FK" FOREIGN KEY ("ZONE")
	  REFERENCES "Z_ZONE" ("ZONE_ID") ENABLE;





















  CREATE OR REPLACE FORCE EDITIONABLE VIEW "BILL_LIST" ("PURCHASE_ORDER", "M_QUEUE_NO", "M_TABLE_NO", "BILL_STATUS", "REQUEST_CHECK_BILL", "FOOD_NAME", "MENU_AMOUNT", "ZONE", "NAME_ZONE", "TABLE_NO") AS 
  SELECT a."PURCHASE_ORDER",a."M_QUEUE_NO",a."M_TABLE_NO",a."BILL_STATUS",a."REQUEST_CHECK_BILL", e.food_name, b.menu_amount, c.zone, d.name_zone, c.table_no
FROM PURCHASE_ORDER_MENU a
JOIN menu_list b ON b.M_PURCHASE_ORDER = a.PURCHASE_ORDER
JOIN t_table c ON c.table_id = a.M_TABLE_NO
JOIN z_zone d ON d.zone_id = c.zone
JOIN food_list e ON e.food_id = b.M_FOOD_ID
WHERE a.bill_status = '0' AND a.REQUEST_CHECK_BILL = 1
ORDER BY a.PURCHASE_ORDER, a.bill_status, a.REQUEST_CHECK_BILL;

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "MENU_WAITING_LIST" ("ORDER_NO", "M_FOOD_ID", "MENU_AMOUNT", "RATE", "TOTAL", "M_PURCHASE_ORDER", "COOK_STATUS", "FOOD_NAME", "M_TABLE_NO", "ZONE", "NAME_ZONE", "TABLE_NO") AS 
  select a."ORDER_NO",a."M_FOOD_ID",a."MENU_AMOUNT",a."RATE",a."TOTAL",a."M_PURCHASE_ORDER",a."COOK_STATUS",e.FOOD_NAME, b.M_TABLE_NO,c.ZONE,d.NAME_ZONE,c.TABLE_NO
from MENU_LIST a,PURCHASE_ORDER_MENU b,T_TABLE c,Z_ZONE d,FOOD_LIST e
where cook_status is null and
      c.TABLE_ID=b.M_TABLE_NO and 
      d.ZONE_ID=c.ZONE and
      b.PURCHASE_ORDER=a.M_PURCHASE_ORDER and
      e.FOOD_ID=a.M_FOOD_ID
 order by a.M_PURCHASE_ORDER,a.ORDER_NO;

  CREATE OR REPLACE EDITIONABLE TRIGGER "PURCHASE_ORDER_MENU_T" 
after
insert or update or delete on "PURCHASE_ORDER_MENU"
for each row
begin
    update q_queue set QUEUE_STATUS='1' 
    where QUEUE_NO=:NEW.M_QUEUE_NO;
end;
/
ALTER TRIGGER "PURCHASE_ORDER_MENU_T" ENABLE;